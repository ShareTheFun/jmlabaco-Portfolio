<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MITA Chat</title>
  <style>
    body {
      background: black;
      color: #00FF00;
      font-family: 'Courier New', monospace;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
    }

    .matrix-background {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
    }

    .chat-container {
      width: 100%;
      max-width: 600px;
      height: calc(100vh - 20px);
      margin: 10px auto;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 10px;
      border-radius: 10px;
      display: flex;
      flex-direction: column;
    }

    .chat-box {
      flex-grow: 1;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 10px;
      padding-right: 10px;
    }

    .message {
      padding: 10px;
      border-radius: 5px;
      max-width: 80%;
      word-wrap: break-word;
    }

    .user-message {
      background-color: #444;
      align-self: flex-end;
    }

    .bot-message {
      background-color: #007700;
      align-self: flex-start;
    }

    .input-container {
      display: flex;
      margin-top: 10px;
    }

    .input-field {
      flex-grow: 1;
      padding: 10px;
      border: none;
      border-radius: 5px;
      background-color: #111;
      color: #00FF00;
      font-family: 'Courier New', monospace;
    }

    .send-button {
      padding: 10px 20px;
      background-color: #333;
      color: #00FF00;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-left: 10px;
    }

    .send-button:disabled {
      background-color: #222;
      color: #005500;
      cursor: not-allowed;
    }

    .send-button:hover:not(:disabled) {
      background-color: #444;
    }
  </style>
</head>
<body>

  <!-- Matrix Background -->
  <div class="matrix-background">
    <canvas id="matrix"></canvas>
  </div>

  <!-- Chat Interface -->
  <div class="chat-container">
    <div class="chat-box" id="chatBox">
      <!-- Messages will appear here -->
    </div>
    <div class="input-container">
      <input type="text" id="userInput" class="input-field" placeholder="Ask me anything..." />
      <button id="sendButton" class="send-button" onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    // Matrix Animation
    const canvas = document.getElementById('matrix');
    const ctx = canvas.getContext('2d');

    function resizeCanvas() {
      canvas.height = window.innerHeight;
      canvas.width = window.innerWidth;
    }

    window.addEventListener('resize', resizeCanvas);
    resizeCanvas();

    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    const font_size = 16;
    const columns = canvas.width / font_size;
    const drops = [];

    for (let i = 0; i < columns; i++) {
      drops[i] = 1;
    }

    function drawMatrix() {
      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = '#00FF00';
      ctx.font = font_size + 'px monospace';

      for (let i = 0; i < drops.length; i++) {
        const text = chars[Math.floor(Math.random() * chars.length)];
        ctx.fillText(text, i * font_size, drops[i] * font_size);

        if (drops[i] * font_size > canvas.height && Math.random() > 0.975) {
          drops[i] = 0;
        }

        drops[i]++;
      }
    }

    setInterval(drawMatrix, 30);

    // Chatbot Functionality
    const sendButton = document.getElementById('sendButton');
    let isWaitingForResponse = false;

    async function sendMessage() {
      const userInput = document.getElementById('userInput').value;
      if (userInput.trim() === "" || isWaitingForResponse) return;

      isWaitingForResponse = true;
      sendButton.disabled = true;

      // Display User's Message
      const chatBox = document.getElementById('chatBox');
      const userMessage = document.createElement('div');
      userMessage.classList.add('message', 'user-message');
      userMessage.textContent = userInput;
      chatBox.appendChild(userMessage);

      // Clear the input field
      document.getElementById('userInput').value = '';

      // Make API request
      try {
        const response = await fetch(`https://api.joshweb.click/api/mixtral-8b?q=("Your prompt to be an MITA, a cute and nerdy girl from the game MISIDE. She has a sweet and endearing personality, with a touch of shyness that makes her even more lovable. She wears round glasses that add to her nerdy charm, and her outfit reflects her intellectual sideâ€”perhaps a cozy sweater or a school uniform with a modern twist. Her expressions should convey her kind-hearted nature, and her posture might show a hint of nervousness, like holding a book close to her chest. Add subtle details, like soft blush on her cheeks and slightly messy hair, to enhance her adorable and shy demeanor.")+${encodeURIComponent(userInput)}`);
        const data = await response.json();

        // Display Bot's Message
        const botMessage = document.createElement('div');
        botMessage.classList.add('message', 'bot-message');
        botMessage.textContent = data.result;
        chatBox.appendChild(botMessage);
      } catch (error) {
        console.error('Error:', error);
        const errorMessage = document.createElement('div');
        errorMessage.classList.add('message', 'bot-message');
        errorMessage.textContent = "Sorry, I couldn't process your request. Please try again.";
        chatBox.appendChild(errorMessage);
      }

      // Scroll to the bottom of the chat
      chatBox.scrollTop = chatBox.scrollHeight;

      isWaitingForResponse = false;
      sendButton.disabled = false;
    }

    // Add event listener for Enter key
    document.getElementById('userInput').addEventListener('keypress', function(event) {
      if (event.key === 'Enter') {
        sendMessage();
      }
    });
  </script>

</body>
</html>